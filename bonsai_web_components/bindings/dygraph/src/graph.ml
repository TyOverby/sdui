[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]

open! Core
open! Import
open Gen_js_api

type t = Ojs.t

let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1

let create : Native_node.t -> Data.t -> Options.t -> t =
  fun (x3 : Native_node.t) (x4 : Data.t) (x5 : Options.t) ->
  t_of_js
    (Ojs.new_obj
       (Ojs.get_prop_ascii Ojs.global "Dygraph")
       [| Native_node.t_to_js x3; Data.t_to_js x4; Options.t_to_js x5 |])
;;

let destroy : t -> unit = fun (x6 : t) -> ignore (Ojs.call (t_to_js x6) "destroy" [||])
let resize : t -> unit = fun (x7 : t) -> ignore (Ojs.call (t_to_js x7) "resize" [||])

let resize_explicit : t -> width:int -> height:int -> unit =
  fun (x10 : t) ~width:(x8 : int) ~height:(x9 : int) ->
  ignore (Ojs.call (t_to_js x10) "resize" [| Ojs.int_to_js x8; Ojs.int_to_js x9 |])
;;

let updateOptions : t -> Update_options.t -> unit =
  fun (x12 : t) (x11 : Update_options.t) ->
  ignore (Ojs.call (t_to_js x12) "updateOptions" [| Update_options.t_to_js x11 |])
;;

let getArea : t -> Area.t =
  fun (x13 : t) -> Area.t_of_js (Ojs.call (t_to_js x13) "getArea" [||])
;;

let isZoomed : t -> [ `x | `y ] -> bool =
  fun (x15 : t) (x14 : [ `x | `y ]) ->
  Ojs.bool_of_js
    (Ojs.call
       (t_to_js x15)
       "isZoomed"
       [| (match x14 with
           | `x -> Ojs.string_to_js "x"
           | `y -> Ojs.string_to_js "y")
       |])
;;

let resetZoom : t -> unit =
  fun (x16 : t) -> ignore (Ojs.call (t_to_js x16) "resetZoom" [||])
;;

let primary_context : t -> Canvas_rendering_context_2D.t =
  fun (x17 : t) ->
  Canvas_rendering_context_2D.t_of_js (Ojs.get_prop_ascii (t_to_js x17) "hidden_ctx_")
;;

let overlay_context : t -> Canvas_rendering_context_2D.t =
  fun (x18 : t) ->
  Canvas_rendering_context_2D.t_of_js (Ojs.get_prop_ascii (t_to_js x18) "canvas_ctx_")
;;

let toDomCoords ?(axis = `y1) ~(x : float) ~(y : float) (t : t) =
  let coords =
    Ojs.call
      (t_to_js t)
      "toDomCoords"
      [| Ojs.float_to_js x
       ; Ojs.float_to_js y
       ; Ojs.int_to_js
           (match axis with
            | `y1 -> 0
            | `y2 -> 1)
      |]
  in
  Ojs.float_of_js (Ojs.array_get coords 0), Ojs.float_of_js (Ojs.array_get coords 1)
;;
